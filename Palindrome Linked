/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        string t="" ;
        
        ListNode* curr = head;
        while(curr!=NULL){
            t.push_back(curr->val + '0');
            // cout<<"here"<<endl;
            curr=curr->next;
        }
        
        string res = t;
        
        reverse(t.begin(),t.end());
        
        // cout<<t<<endl;
        // cout<<res;
        
        if(t == res) return true;
        return false;
    }
};
